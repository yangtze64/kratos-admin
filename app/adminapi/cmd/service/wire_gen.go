// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-admin/app/adminapi/internal/conf"
	"kratos-admin/app/adminapi/internal/data"
	"kratos-admin/app/adminapi/internal/server"
	"kratos-admin/app/adminapi/internal/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, registry *conf.Registry, confService *conf.Service, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	userCenterClient := data.NewUserCenterClient(confService, discovery)
	authorizationClient := data.NewAuthorizationClient(confService, discovery)
	dataData, cleanup, err := data.NewData(confData, userCenterClient, authorizationClient, logger)
	if err != nil {
		return nil, nil, err
	}
	userCenterRepo := data.NewUserCenterRepo(dataData, logger)
	authorizationRepo := data.NewAuthorizationRepo(dataData, logger)
	adminApiService := service.NewAdminApiService(userCenterRepo, authorizationRepo)
	httpServer := server.NewHTTPServer(confServer, adminApiService, logger)
	registrar := data.NewRegistrar(registry)
	app := newApp(logger, httpServer, registrar)
	return app, func() {
		cleanup()
	}, nil
}
